- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Check if GitLab configuration file already exists.
  stat: path=/etc/gitlab/gitlab.rb
  register: gitlab_config_file

- name: Check if GitLab is already installed.
  stat: path=/usr/bin/gitlab-ctl
  register: gitlab_file

# Install GitLab and its dependencies.
- name: Install GitLab dependencies.
  package:
    name: "{{ gitlab_dependencies }}"
    state: present

- name: Install GitLab dependencies (Debian).
  apt:
    name: gnupg2
    state: present
  when: ansible_os_family == 'Debian'

- name: Download GitLab repository installation script.
  get_url:
    url: "{{ gitlab_repository_installation_script_url }}"
    dest: /tmp/gitlab_install_repository.sh
    validate_certs: "{{ gitlab_download_validate_certs }}"
  when: not gitlab_file.stat.exists

- name: Install GitLab repository.
  command: bash /tmp/gitlab_install_repository.sh
  register: output
  when: not gitlab_file.stat.exists

- name: Define the Gitlab package name.
  set_fact:
    gitlab_package_name: "{{ gitlab_edition }}{{ gitlab_package_version_separator }}{{ gitlab_version }}"
  when: gitlab_version | default(false)

- name: Install GitLab
  package:
    name: "{{ gitlab_package_name | default(gitlab_edition) }}"
    state: present
  async: 300
  poll: 5
  when: not gitlab_file.stat.exists

- name: Set admin password
  lineinfile:
    path: /etc/gitlab/gitlab.rb
    regexp: "^# gitlab_rails['initial_root_password']"
    line: "gitlab_rails['initial_root_password'] = \"{{ gitlab_root_password }}\""
    state: present

- name: Set runners' shared token
  lineinfile:
    path: /etc/gitlab/gitlab.rb
    regexp: "^# gitlab_rails['initial_shared_runners_registration_token']"
    line: "gitlab_rails['initial_shared_runners_registration_token'] = \"{{ gitlab_runners_registration_token }}\""
    state: present

# Start and configure GitLab. Sometimes the first run fails, but after that,
# restarts fix problems, so ignore failures on this run.
- name: Reconfigure GitLab (first run).
  command: >
    gitlab-ctl reconfigure
    creates=/var/opt/gitlab/bootstrapped
  environment:
    LC_ALL: "en_US.UTF-8"
    LC_CTYPE: "en_US.UTF-8"
  failed_when: false

- name: Create GitLab SSL configuration folder.
  file:
    path: /etc/gitlab/ssl
    state: directory
    owner: root
    group: root
    mode: 0700
  when: gitlab_create_self_signed_cert

- name: Create self-signed certificate.
  command: >
    openssl req -new -nodes -x509 -subj "{{ gitlab_self_signed_cert_subj }}"
    -days 3650 -keyout {{ gitlab_ssl_certificate_key }} -out {{ gitlab_ssl_certificate }} -extensions v3_ca
    creates={{ gitlab_ssl_certificate }}
  when: gitlab_create_self_signed_cert

- name: Copy GitLab configuration file.
  copy:
    src: "{{ gitlab_config_template }}"
    dest: /etc/gitlab/gitlab.rb
    owner: root
    group: root
    mode: 0600
  notify: restart gitlab

- name: Copy authentication scripts
  delegate_to: localhost
  copy:
    src=scripts/
    dest={{ playbook_dir }}/{{ build_directory }}/scripts

- name: Get access token
  command: chdir={{ playbook_dir }}/{{ build_directory }} python3 scripts/gitlab_token.py token 2022-01-01
  delegate_to: localhost
  register: token

- name: Save access token
  copy:
    content: "{{ token.stdout }}"
    dest: "{{ playbook_dir }}/{{ build_directory }}/gitlab_token.txt"
  delegate_to: localhost

- name: Create Back repository
  shell: >
    curl -X POST -F "path=back" http://192.168.62.45/api/v4/projects\?access_token\={{ token.stdout }} | grep -Po '"runners_token": *\K"[^"]*"' | grep -Po '(?<=")[^"]+(?=")'
  delegate_to: localhost
  register: back_runners_token

- name: Save Back runner token
  copy:
    content: "{{ back_runners_token.stdout }}"
    dest: "{{ playbook_dir }}/{{ build_directory }}/back_runners_token.txt"
  delegate_to: localhost

- name: Create Front repository
  shell: >
    curl -X POST -F "path=front" http://192.168.62.45/api/v4/projects\?access_token\={{ token.stdout }} | grep -Po '"runners_token": *\K"[^"]*"' | grep -Po '(?<=")[^"]+(?=")'
  delegate_to: localhost
  register: front_runners_token

- name: Save Front runner token
  copy:
    content: "{{ front_runners_token.stdout }}"
    dest: "{{ playbook_dir }}/{{ build_directory }}/front_runners_token.txt"
  delegate_to: localhost